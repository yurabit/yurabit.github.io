<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 王源豫个人博客</title>
    <link>/tags/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 王源豫个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 May 2020 11:45:36 +0800</lastBuildDate>
    
	<atom:link href="/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言的单元测试</title>
      <link>/post/go_test/</link>
      <pubDate>Sat, 30 May 2020 11:45:36 +0800</pubDate>
      
      <guid>/post/go_test/</guid>
      <description>Go语言单元测试的基本规则介绍 Go语言的单元测试较容易实现，Go语言为我们提供了单元测试的框架，主要有下面的几个规定
 规则1：单元测试代码的go文件必须以_test.go结尾，Go语言测试工具会鉴别这个符合规则的文件。
 $ go test //备注， 目录下只有main.go和maintest.go的时候，会显示下面的提示 ？ _/Users/XXX/ut [no test files] //执行结果，现实没有测试文件被发现  规则2: 单元测试的函数名必须以Test开头，是可以导出的公开函数。注：函数名尽量以Test+待测试函数的方法名命名
  规则3: 测试函数的签名必须接收一个testing.T类型的指针作为参数，并且该测试函数不能返回任何值
 </description>
    </item>
    
    <item>
      <title>JVM概述（一）</title>
      <link>/post/first/</link>
      <pubDate>Sun, 22 Mar 2020 02:00:06 +0800</pubDate>
      
      <guid>/post/first/</guid>
      <description>JVM JVM(Java Virtual Machine)Java虚拟机是Java实现“一次编写、到处运行”的基本平台。他的总体结构是按照下图所示。
一个java的程序执行大体流程
 通过编译java源文件成字节码文件、或者动态生成的Java字节码文件 将字节码文件（.class文件）通过类加载-&amp;gt;验证-&amp;gt;准备-&amp;gt;解析-&amp;gt;初始化等过程将类以及变量或者方法信息加入到JVM内存中。 运行时数据区分为了5个部分分别存放不同类型的数据 执行引擎通过给定的指令以及分配的处理机按照一定顺序执行程序 将类卸载、程序结束。  </description>
    </item>
    
  </channel>
</rss>